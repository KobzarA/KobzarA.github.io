{"version":3,"file":"static/js/633.ca202ef7.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from \"./error.gif\"\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display:'block', width: '250px', height:'250px', objectFit:'contain', margin:'0 auto'}} \r\n        src={img} alt={'Error!'}/>\r\n\r\n        // <img src={process.env.PUBLIC_URL + \"/error.gif\"} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../spiner/Spiner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './comicsList.scss';\n\n\nconst setContent = (process, Component, loadingMoreItems) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n        case 'loading':\n            return loadingMoreItems ? <><Component /><Spinner /></> : null;\n        case 'confirmed':\n            return <Component />\n        case 'error':\n            return <ErrorMessage />\n        default:\n            throw new Error('Unexpected process state');\n    }\n\n};\n\n\nconst ComicsList = () => {\n    const   [comicsList, setComicsList] = useState([]),\n            [loadingMoreItems, setLoadingMoreItems] = useState(false),\n            [offset, setOffset] = useState(210),\n            [charEnded, setCharEnded] = useState(false);\n    const   {clearError, getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest();\n        // eslint-disable-next-line\n    }, []);\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8 ) {\n            ended = true;\n        }\n        setComicsList(comicsList => ([...comicsList, ...newComicsList]));\n        setLoadingMoreItems(loadingMoreItems => false);\n        setOffset(offset => offset+8);\n        setCharEnded(charEnded => ended);\n    };\n\n    const onRequest = (offset) => {\n        clearError();\n        setLoadingMoreItems(true);\n        getAllComics(offset)\n        .then(onComicsListLoaded)\n        .then(() => setProcess(\"confirmed\"));\n    };\n\n    \n    const renderItems = (arr) => {\n        console.log(arr);\n        const items = arr.map((item, i) => {\n            const {id, thumbnail, title, price} = item;\n            let imgStyle = thumbnail.includes('image_not_available')? \"no_img\" : '';\n             \n            return (\n                <CSSTransition\n                    key={item.id}\n                    timeout={500}\n                    classNames='comics__item'>\n                    <li className=\"comics__item\"\n                        key={i}>\n                        <Link to={`/comics/${id}`}>\n                            <img src={thumbnail} alt={title} className={`comics__item-img ${imgStyle}`} />\n                            <div className=\"comics__item-name\">{title}</div>\n                            <div className=\"comics__item-price\">{`${price}$`}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n\n    }\n    \n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), loadingMoreItems)}\n            <button style={{ 'display': charEnded ? 'none' : 'block' }}\n                    disabled={loadingMoreItems}\n                    onClick={() => onRequest(offset)}\n                    className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;\n ","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"There are described all of our comics\"\r\n                />\r\n                <title>Comics list page</title>\r\n            </Helmet>\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst  useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n                      \r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=35589cb5e6aa216ba55754511e0d35a8';\r\n    const _baseOffset = 210; \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n       \r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n        }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?nameStartsWith=${name}&${_apiKey}`)\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comicsList: char.comics.items\r\n        }\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?noVariants=true&startYear=2021&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }    \r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n        }\r\n\r\n    const _transformComic= (comic) => {\r\n        return {\r\n            title: comic.title,\r\n            description: comic.description ? `${comic.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price,\r\n            id: comic.id,\r\n            pageCount: comic.pageCount,\r\n            language: comic.textObjects[0] ? comic.textObjects[0].language : 'No information'\r\n            \r\n        }\r\n    }\r\n\r\n    return {\r\n        process,\r\n        setProcess,\r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacter, \r\n        getAllComics, \r\n        getComic, \r\n        getCharacterByName };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n            setProcess('loading');\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                return data;\r\n            } catch(e) {\r\n                setProcess('error');\r\n                throw e;\r\n            }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {setProcess('waiting')}, []);\r\n    return {request, clearError, process, setProcess};\r\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","setContent","process","Component","loadingMoreItems","ErrorMessage","Error","useState","comicsList","setComicsList","setLoadingMoreItems","offset","setOffset","charEnded","setCharEnded","useMarvelService","clearError","getAllComics","setProcess","useEffect","onRequest","onComicsListLoaded","newComicsList","ended","length","then","arr","console","log","items","map","item","i","id","thumbnail","title","price","imgStyle","includes","CSSTransition","timeout","classNames","to","TransitionGroup","component","renderItems","disabled","onClick","AppBanner","Helmet","name","content","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","getCharacterByName","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComic","getComic","comic","prices","pageCount","language","textObjects"],"sourceRoot":""}